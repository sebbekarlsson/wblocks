#include "Website.h"


Website::Website(std::string directory) {
    this->dir = directory;

    ResourceManager::load(this->dir + "/site.json");
    ResourceManager::load("src/shards/html.html");
    ResourceManager::load("src/shards/style.css");
   
    this->title = this->site["title"].get<std::string>(); 
    this->html = ResourceManager::get("src/shards/html.html");
    this->css = ResourceManager::get("src/shards/style.css");
    this->site = nlohmann::json::parse(ResourceManager::get(this->dir + "/site.json"));
    this->font = nlohmann::json::parse(ResourceManager::get(this->dir + "/" + this->site["font"].get<std::string>()));

    mkdir(
            this->site["title"].get<std::string>().c_str(),
            S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH
         );
}

void Website::addHeaderElement(std::string text) {
    this->header.push_back(text);
}

void Website::setFont(std::string family, std::string fallbackFamily) {
    this->family = family;
    this->fallbackFamily = fallbackFamily;
}

bool Website::addPage(std::string title, std::string content) {
    this->pages.insert(std::pair<std::string, std::string>(title, content));
}

void Website::generatePages() {
    for(auto const &ent1 : pages) {
        std::cout << pages.at(ent1.first) << std::endl;
    }
}
